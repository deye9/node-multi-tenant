services:
  backend:
    build:
      context: .
    environment:
      NODE_ENV: production
      DATABASE_URL: postgres://postgres:postgres@pg:5432/multiTenant_dev
    ports:
      - 1981:5000
      - 9229:9229 # for debugging
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.pnpm-store
    command: pnpm docker:start
    depends_on:
      pg:
        condition: service_healthy
      
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4_container
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./db/pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_LISTEN_PORT:-5050}:80"
    command: pnpm docker:pgadmin
    depends_on:
      pg:
        condition: service_healthy

  pg:
    image: postgres:15-alpine
    user: postgres
    restart: always
    container_name: postgres_container
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-multiTenant_dev}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    volumes:
      - ./db/db-data:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT:-5432}
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db-data:
  pgadmin:
