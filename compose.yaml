services:
  backend:
    build:
      context: .
    env_file:
      - .env
    ports:
      - 1981:5000
      - 9229:9229 # for debugging
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.pnpm-store
    command: pnpm docker:start
    depends_on:
      postgres:
        condition: service_healthy
    profiles: ["main"]

  pgadmin:
    image: dpage/pgadmin4
    restart: always
    container_name: pgadmin4_container
    environment:
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - '${PGADMIN_LISTEN_PORT:-5050}:80'
    depends_on:
      postgres:
        condition: service_healthy
    profiles: ["main"]

  postgres:
    container_name: postgres
    image: postgres:16-alpine
    user: postgres
    restart: always
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT:-5432}
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["main"]

  test:
    build:
      context: .
    env_file:
      - ./__tests__/.env
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.pnpm-store
    command: pnpm test
    depends_on:
      testdb:
        condition: service_healthy
    profiles: ["test"]
  
  testdb:
    container_name: testdb
    image: postgres:16-alpine
    user: postgres
    restart: always
    env_file:
      - ./__tests__/.env
    volumes:
      - pgtest:/var/lib/postgresql/data
    expose:
      - ${POSTGRES_PORT:-5432}
    healthcheck:
      test: ['CMD', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["test"]

volumes:
  pgtest:
  pgdata:
  pgadmin:
